"""
Исполнитель Увеличитель преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
1. Вычти 2
2. Найди целую часть от деления на 2
Первая из них уменьшает число на экране на 2, вторая заменяет число на экране на целую часть от деления числа на 2.
Программа для исполнителя — это последовательность команд.
При исходном числе 80 результатом является число 1, и при этом траектория вычислений содержит число 40 и не содержит 20.
Сколько таких программ существует?
Траектория вычислений программы — это последовательность результатов выполнения всех команд программы.
Например, для программы 122 при исходном числе 10 траектория состоит из чисел 8, 4, 2.
"""
count = 0


def F(n, path):
    global count
    npath = path + [n]
    if n == 1 and 40 in npath and 20 not in npath:
        count += 1
        print(count, npath)
    if n < 1:
        return
    F(n - 2, npath)
    F(n // 2, npath)


F(80, [])
print(count)

"""
Исполнитель преобразует число, записанное на экране.
У исполнителя есть команды, которым присвоены номера:
1.Прибавить 1
2.Прибавить 3
3.Умножить на 3.
Первая команда увеличивает число на экране на 1, вторая — на 3, третья — увеличивает число в 3 раза.
Сколько существует программ, для которых при исходном числе 7 результатом является число 20 
и при этом траектория содержит число 14 и не содержит 15?
"""

count = 0


def F(n, path):
    global count
    npath = path + [n]
    if n == 1 and 40 in npath and 20 not in npath:
        count += 1
        print(count, npath)
    if n < 1:
        return
    F(n - 2, npath)
    F(n // 2, npath)


F(80, [])
print(count)